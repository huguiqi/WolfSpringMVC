<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

    <context:annotation-config />
    <!-- 需要扫描的包，@Repository、@Service等
    -->
    <context:component-scan base-package="com.wolf">
    <!--
    	启用了对类包进行扫描以实施注释驱动 Bean 定义的功能,
		启用了注释驱动自动注入的功能,隐式地在内部注册了 AutowiredAnnotationBeanPostProcessor
		和 CommonAnnotationBeanPostProcessor,就可以将 <context:annotation-config/>移除了
    -->
    </context:component-scan>
    <!-- 引入别的配置文件 -->
    <!-- 引入springI18n-config.xml -->
    <import resource="springI18n-config.xml"/>
    <import resource="springMybatis-config.xml"/>
    <mvc:annotation-driven/>

    <aop:aspectj-autoproxy/>
    <bean class="org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator" />

    <!--
       通过 customUserDetailsService,Spring会自动的用户的访问级别.
       也可以理解成:以后我们和数据库操作就是通过customUserDetailsService来进行关联.
    -->
    <bean id="customUserDetailsService" class="com.wolf.service.CustomUserDetailsService"/>
    <!-- 对密码进行MD5编码 -->
    <bean class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" id="passwordEncoder"/>

</beans>